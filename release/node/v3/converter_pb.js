// source: v3/converter.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var v3_types_pb = require('../v3/types_pb.js');
goog.object.extend(proto, v3_types_pb);
goog.exportSymbol('proto.v3.ConvertAggregatesRequest', null, global);
goog.exportSymbol('proto.v3.ConvertAggregatesResponse', null, global);
goog.exportSymbol('proto.v3.ConvertDatapointsRequest', null, global);
goog.exportSymbol('proto.v3.ConvertDatapointsResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v3.ConvertAggregatesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.v3.ConvertAggregatesRequest.repeatedFields_, null);
};
goog.inherits(proto.v3.ConvertAggregatesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v3.ConvertAggregatesRequest.displayName = 'proto.v3.ConvertAggregatesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v3.ConvertAggregatesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.v3.ConvertAggregatesResponse.repeatedFields_, null);
};
goog.inherits(proto.v3.ConvertAggregatesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v3.ConvertAggregatesResponse.displayName = 'proto.v3.ConvertAggregatesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v3.ConvertDatapointsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.v3.ConvertDatapointsRequest.repeatedFields_, null);
};
goog.inherits(proto.v3.ConvertDatapointsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v3.ConvertDatapointsRequest.displayName = 'proto.v3.ConvertDatapointsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v3.ConvertDatapointsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.v3.ConvertDatapointsResponse.repeatedFields_, null);
};
goog.inherits(proto.v3.ConvertDatapointsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v3.ConvertDatapointsResponse.displayName = 'proto.v3.ConvertDatapointsResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.v3.ConvertAggregatesRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v3.ConvertAggregatesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.v3.ConvertAggregatesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v3.ConvertAggregatesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v3.ConvertAggregatesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    convert: (f = msg.getConvert()) && v3_types_pb.ConvertArgs.toObject(includeInstance, f),
    aggregatesList: jspb.Message.toObjectList(msg.getAggregatesList(),
    v3_types_pb.Aggregate.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v3.ConvertAggregatesRequest}
 */
proto.v3.ConvertAggregatesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v3.ConvertAggregatesRequest;
  return proto.v3.ConvertAggregatesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v3.ConvertAggregatesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v3.ConvertAggregatesRequest}
 */
proto.v3.ConvertAggregatesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new v3_types_pb.ConvertArgs;
      reader.readMessage(value,v3_types_pb.ConvertArgs.deserializeBinaryFromReader);
      msg.setConvert(value);
      break;
    case 2:
      var value = new v3_types_pb.Aggregate;
      reader.readMessage(value,v3_types_pb.Aggregate.deserializeBinaryFromReader);
      msg.addAggregates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v3.ConvertAggregatesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v3.ConvertAggregatesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v3.ConvertAggregatesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v3.ConvertAggregatesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConvert();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      v3_types_pb.ConvertArgs.serializeBinaryToWriter
    );
  }
  f = message.getAggregatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      v3_types_pb.Aggregate.serializeBinaryToWriter
    );
  }
};


/**
 * optional ConvertArgs convert = 1;
 * @return {?proto.v3.ConvertArgs}
 */
proto.v3.ConvertAggregatesRequest.prototype.getConvert = function() {
  return /** @type{?proto.v3.ConvertArgs} */ (
    jspb.Message.getWrapperField(this, v3_types_pb.ConvertArgs, 1));
};


/**
 * @param {?proto.v3.ConvertArgs|undefined} value
 * @return {!proto.v3.ConvertAggregatesRequest} returns this
*/
proto.v3.ConvertAggregatesRequest.prototype.setConvert = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v3.ConvertAggregatesRequest} returns this
 */
proto.v3.ConvertAggregatesRequest.prototype.clearConvert = function() {
  return this.setConvert(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v3.ConvertAggregatesRequest.prototype.hasConvert = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Aggregate aggregates = 2;
 * @return {!Array<!proto.v3.Aggregate>}
 */
proto.v3.ConvertAggregatesRequest.prototype.getAggregatesList = function() {
  return /** @type{!Array<!proto.v3.Aggregate>} */ (
    jspb.Message.getRepeatedWrapperField(this, v3_types_pb.Aggregate, 2));
};


/**
 * @param {!Array<!proto.v3.Aggregate>} value
 * @return {!proto.v3.ConvertAggregatesRequest} returns this
*/
proto.v3.ConvertAggregatesRequest.prototype.setAggregatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.v3.Aggregate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.v3.Aggregate}
 */
proto.v3.ConvertAggregatesRequest.prototype.addAggregates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.v3.Aggregate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.v3.ConvertAggregatesRequest} returns this
 */
proto.v3.ConvertAggregatesRequest.prototype.clearAggregatesList = function() {
  return this.setAggregatesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.v3.ConvertAggregatesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v3.ConvertAggregatesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.v3.ConvertAggregatesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v3.ConvertAggregatesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v3.ConvertAggregatesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    aggregatesList: jspb.Message.toObjectList(msg.getAggregatesList(),
    v3_types_pb.Aggregate.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v3.ConvertAggregatesResponse}
 */
proto.v3.ConvertAggregatesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v3.ConvertAggregatesResponse;
  return proto.v3.ConvertAggregatesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v3.ConvertAggregatesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v3.ConvertAggregatesResponse}
 */
proto.v3.ConvertAggregatesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new v3_types_pb.Aggregate;
      reader.readMessage(value,v3_types_pb.Aggregate.deserializeBinaryFromReader);
      msg.addAggregates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v3.ConvertAggregatesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v3.ConvertAggregatesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v3.ConvertAggregatesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v3.ConvertAggregatesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAggregatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      v3_types_pb.Aggregate.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Aggregate aggregates = 1;
 * @return {!Array<!proto.v3.Aggregate>}
 */
proto.v3.ConvertAggregatesResponse.prototype.getAggregatesList = function() {
  return /** @type{!Array<!proto.v3.Aggregate>} */ (
    jspb.Message.getRepeatedWrapperField(this, v3_types_pb.Aggregate, 1));
};


/**
 * @param {!Array<!proto.v3.Aggregate>} value
 * @return {!proto.v3.ConvertAggregatesResponse} returns this
*/
proto.v3.ConvertAggregatesResponse.prototype.setAggregatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.v3.Aggregate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.v3.Aggregate}
 */
proto.v3.ConvertAggregatesResponse.prototype.addAggregates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.v3.Aggregate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.v3.ConvertAggregatesResponse} returns this
 */
proto.v3.ConvertAggregatesResponse.prototype.clearAggregatesList = function() {
  return this.setAggregatesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.v3.ConvertDatapointsRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v3.ConvertDatapointsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.v3.ConvertDatapointsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v3.ConvertDatapointsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v3.ConvertDatapointsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    convert: (f = msg.getConvert()) && v3_types_pb.ConvertArgs.toObject(includeInstance, f),
    datapointsList: jspb.Message.toObjectList(msg.getDatapointsList(),
    v3_types_pb.Datapoint.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v3.ConvertDatapointsRequest}
 */
proto.v3.ConvertDatapointsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v3.ConvertDatapointsRequest;
  return proto.v3.ConvertDatapointsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v3.ConvertDatapointsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v3.ConvertDatapointsRequest}
 */
proto.v3.ConvertDatapointsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new v3_types_pb.ConvertArgs;
      reader.readMessage(value,v3_types_pb.ConvertArgs.deserializeBinaryFromReader);
      msg.setConvert(value);
      break;
    case 2:
      var value = new v3_types_pb.Datapoint;
      reader.readMessage(value,v3_types_pb.Datapoint.deserializeBinaryFromReader);
      msg.addDatapoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v3.ConvertDatapointsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v3.ConvertDatapointsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v3.ConvertDatapointsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v3.ConvertDatapointsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConvert();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      v3_types_pb.ConvertArgs.serializeBinaryToWriter
    );
  }
  f = message.getDatapointsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      v3_types_pb.Datapoint.serializeBinaryToWriter
    );
  }
};


/**
 * optional ConvertArgs convert = 1;
 * @return {?proto.v3.ConvertArgs}
 */
proto.v3.ConvertDatapointsRequest.prototype.getConvert = function() {
  return /** @type{?proto.v3.ConvertArgs} */ (
    jspb.Message.getWrapperField(this, v3_types_pb.ConvertArgs, 1));
};


/**
 * @param {?proto.v3.ConvertArgs|undefined} value
 * @return {!proto.v3.ConvertDatapointsRequest} returns this
*/
proto.v3.ConvertDatapointsRequest.prototype.setConvert = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.v3.ConvertDatapointsRequest} returns this
 */
proto.v3.ConvertDatapointsRequest.prototype.clearConvert = function() {
  return this.setConvert(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.v3.ConvertDatapointsRequest.prototype.hasConvert = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Datapoint datapoints = 2;
 * @return {!Array<!proto.v3.Datapoint>}
 */
proto.v3.ConvertDatapointsRequest.prototype.getDatapointsList = function() {
  return /** @type{!Array<!proto.v3.Datapoint>} */ (
    jspb.Message.getRepeatedWrapperField(this, v3_types_pb.Datapoint, 2));
};


/**
 * @param {!Array<!proto.v3.Datapoint>} value
 * @return {!proto.v3.ConvertDatapointsRequest} returns this
*/
proto.v3.ConvertDatapointsRequest.prototype.setDatapointsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.v3.Datapoint=} opt_value
 * @param {number=} opt_index
 * @return {!proto.v3.Datapoint}
 */
proto.v3.ConvertDatapointsRequest.prototype.addDatapoints = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.v3.Datapoint, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.v3.ConvertDatapointsRequest} returns this
 */
proto.v3.ConvertDatapointsRequest.prototype.clearDatapointsList = function() {
  return this.setDatapointsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.v3.ConvertDatapointsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v3.ConvertDatapointsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.v3.ConvertDatapointsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v3.ConvertDatapointsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v3.ConvertDatapointsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    datapointsList: jspb.Message.toObjectList(msg.getDatapointsList(),
    v3_types_pb.Datapoint.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v3.ConvertDatapointsResponse}
 */
proto.v3.ConvertDatapointsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v3.ConvertDatapointsResponse;
  return proto.v3.ConvertDatapointsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v3.ConvertDatapointsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v3.ConvertDatapointsResponse}
 */
proto.v3.ConvertDatapointsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new v3_types_pb.Datapoint;
      reader.readMessage(value,v3_types_pb.Datapoint.deserializeBinaryFromReader);
      msg.addDatapoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v3.ConvertDatapointsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v3.ConvertDatapointsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v3.ConvertDatapointsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v3.ConvertDatapointsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDatapointsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      v3_types_pb.Datapoint.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Datapoint datapoints = 1;
 * @return {!Array<!proto.v3.Datapoint>}
 */
proto.v3.ConvertDatapointsResponse.prototype.getDatapointsList = function() {
  return /** @type{!Array<!proto.v3.Datapoint>} */ (
    jspb.Message.getRepeatedWrapperField(this, v3_types_pb.Datapoint, 1));
};


/**
 * @param {!Array<!proto.v3.Datapoint>} value
 * @return {!proto.v3.ConvertDatapointsResponse} returns this
*/
proto.v3.ConvertDatapointsResponse.prototype.setDatapointsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.v3.Datapoint=} opt_value
 * @param {number=} opt_index
 * @return {!proto.v3.Datapoint}
 */
proto.v3.ConvertDatapointsResponse.prototype.addDatapoints = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.v3.Datapoint, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.v3.ConvertDatapointsResponse} returns this
 */
proto.v3.ConvertDatapointsResponse.prototype.clearDatapointsList = function() {
  return this.setDatapointsList([]);
};


goog.object.extend(exports, proto.v3);
