// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.23.1
// source: v3/datapoints.proto

package v3

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StreamAggregatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatastreamId string           `protobuf:"bytes,1,opt,name=datastream_id,json=datastreamId,proto3" json:"datastream_id,omitempty"`
	Query        *DatapointsQuery `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	Convert      *ConvertArgs     `protobuf:"bytes,3,opt,name=convert,proto3" json:"convert,omitempty"`
	BucketWidth  string           `protobuf:"bytes,4,opt,name=bucket_width,json=bucketWidth,proto3" json:"bucket_width,omitempty"`
	CountOnly    bool             `protobuf:"varint,5,opt,name=count_only,json=countOnly,proto3" json:"count_only,omitempty"`
}

func (x *StreamAggregatesRequest) Reset() {
	*x = StreamAggregatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v3_datapoints_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamAggregatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamAggregatesRequest) ProtoMessage() {}

func (x *StreamAggregatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v3_datapoints_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamAggregatesRequest.ProtoReflect.Descriptor instead.
func (*StreamAggregatesRequest) Descriptor() ([]byte, []int) {
	return file_v3_datapoints_proto_rawDescGZIP(), []int{0}
}

func (x *StreamAggregatesRequest) GetDatastreamId() string {
	if x != nil {
		return x.DatastreamId
	}
	return ""
}

func (x *StreamAggregatesRequest) GetQuery() *DatapointsQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *StreamAggregatesRequest) GetConvert() *ConvertArgs {
	if x != nil {
		return x.Convert
	}
	return nil
}

func (x *StreamAggregatesRequest) GetBucketWidth() string {
	if x != nil {
		return x.BucketWidth
	}
	return ""
}

func (x *StreamAggregatesRequest) GetCountOnly() bool {
	if x != nil {
		return x.CountOnly
	}
	return false
}

type StreamAggregatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aggregates []*Aggregate `protobuf:"bytes,1,rep,name=aggregates,proto3" json:"aggregates,omitempty"`
}

func (x *StreamAggregatesResponse) Reset() {
	*x = StreamAggregatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v3_datapoints_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamAggregatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamAggregatesResponse) ProtoMessage() {}

func (x *StreamAggregatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v3_datapoints_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamAggregatesResponse.ProtoReflect.Descriptor instead.
func (*StreamAggregatesResponse) Descriptor() ([]byte, []int) {
	return file_v3_datapoints_proto_rawDescGZIP(), []int{1}
}

func (x *StreamAggregatesResponse) GetAggregates() []*Aggregate {
	if x != nil {
		return x.Aggregates
	}
	return nil
}

type StreamDatapointsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatastreamId string           `protobuf:"bytes,1,opt,name=datastream_id,json=datastreamId,proto3" json:"datastream_id,omitempty"`
	Query        *DatapointsQuery `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	Convert      *ConvertArgs     `protobuf:"bytes,3,opt,name=convert,proto3" json:"convert,omitempty"`
}

func (x *StreamDatapointsRequest) Reset() {
	*x = StreamDatapointsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v3_datapoints_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamDatapointsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamDatapointsRequest) ProtoMessage() {}

func (x *StreamDatapointsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v3_datapoints_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamDatapointsRequest.ProtoReflect.Descriptor instead.
func (*StreamDatapointsRequest) Descriptor() ([]byte, []int) {
	return file_v3_datapoints_proto_rawDescGZIP(), []int{2}
}

func (x *StreamDatapointsRequest) GetDatastreamId() string {
	if x != nil {
		return x.DatastreamId
	}
	return ""
}

func (x *StreamDatapointsRequest) GetQuery() *DatapointsQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *StreamDatapointsRequest) GetConvert() *ConvertArgs {
	if x != nil {
		return x.Convert
	}
	return nil
}

type StreamDatapointsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Datapoints []*Datapoint `protobuf:"bytes,1,rep,name=datapoints,proto3" json:"datapoints,omitempty"`
}

func (x *StreamDatapointsResponse) Reset() {
	*x = StreamDatapointsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v3_datapoints_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamDatapointsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamDatapointsResponse) ProtoMessage() {}

func (x *StreamDatapointsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v3_datapoints_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamDatapointsResponse.ProtoReflect.Descriptor instead.
func (*StreamDatapointsResponse) Descriptor() ([]byte, []int) {
	return file_v3_datapoints_proto_rawDescGZIP(), []int{3}
}

func (x *StreamDatapointsResponse) GetDatapoints() []*Datapoint {
	if x != nil {
		return x.Datapoints
	}
	return nil
}

var File_v3_datapoints_proto protoreflect.FileDescriptor

var file_v3_datapoints_proto_rawDesc = []byte{
	0x0a, 0x13, 0x76, 0x33, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x33, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d,
	0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x76, 0x33, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd6, 0x01, 0x0a, 0x17, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76, 0x33, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x29, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x76, 0x33, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x74, 0x41, 0x72, 0x67, 0x73, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x57, 0x69, 0x64, 0x74,
	0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x6e, 0x6c, 0x79,
	0x22, 0x49, 0x0a, 0x18, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x0a,
	0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x76, 0x33, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52,
	0x0a, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x22, 0x94, 0x01, 0x0a, 0x17,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76, 0x33,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x29, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x76, 0x33, 0x2e, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x74, 0x41, 0x72, 0x67, 0x73, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x74, 0x22, 0x49, 0x0a, 0x18, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d,
	0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x33, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x32, 0xcf, 0x01,
	0x0a, 0x11, 0x44, 0x61, 0x74, 0x61, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x10, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x41, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x76, 0x33, 0x2e, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x76, 0x33, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x67, 0x0a, 0x10, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x44, 0x61, 0x74, 0x61, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x1b, 0x2e, 0x76, 0x33, 0x2e,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x76, 0x33, 0x2e, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f,
	0x76, 0x33, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x30, 0x01, 0x42,
	0x90, 0x02, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64,
	0x65, 0x6e, 0x64, 0x72, 0x61, 0x73, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x2f, 0x64, 0x65, 0x6e,
	0x64, 0x72, 0x61, 0x2d, 0x64, 0x61, 0x74, 0x61, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x2f, 0x67, 0x6f, 0x2f, 0x76, 0x33, 0x92, 0x41, 0xd4, 0x01, 0x12, 0x94,
	0x01, 0x0a, 0x15, 0x44, 0x65, 0x6e, 0x64, 0x72, 0x61, 0x20, 0x44, 0x61, 0x74, 0x61, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x20, 0x41, 0x50, 0x49, 0x22, 0x38, 0x12, 0x1c, 0x68, 0x74, 0x74, 0x70,
	0x73, 0x3a, 0x2f, 0x2f, 0x64, 0x65, 0x6e, 0x64, 0x72, 0x61, 0x2e, 0x73, 0x63, 0x69, 0x65, 0x6e,
	0x63, 0x65, 0x2f, 0x61, 0x62, 0x6f, 0x75, 0x74, 0x1a, 0x18, 0x6d, 0x65, 0x74, 0x61, 0x68, 0x75,
	0x6d, 0x61, 0x6e, 0x40, 0x64, 0x65, 0x6e, 0x64, 0x72, 0x61, 0x2e, 0x73, 0x63, 0x69, 0x65, 0x6e,
	0x63, 0x65, 0x2a, 0x3c, 0x0a, 0x0c, 0x42, 0x53, 0x44, 0x2d, 0x33, 0x2d, 0x43, 0x6c, 0x61, 0x75,
	0x73, 0x65, 0x12, 0x2c, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x6f, 0x70, 0x65, 0x6e,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x69, 0x63, 0x65, 0x6e,
	0x73, 0x65, 0x73, 0x2f, 0x42, 0x53, 0x44, 0x2d, 0x33, 0x2d, 0x43, 0x6c, 0x61, 0x75, 0x73, 0x65,
	0x32, 0x03, 0x33, 0x2e, 0x30, 0x1a, 0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x68, 0x6f, 0x73, 0x74,
	0x3a, 0x38, 0x30, 0x35, 0x31, 0x2a, 0x03, 0x01, 0x02, 0x04, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x14, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x78, 0x2d, 0x6e, 0x64, 0x6a, 0x73,
	0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v3_datapoints_proto_rawDescOnce sync.Once
	file_v3_datapoints_proto_rawDescData = file_v3_datapoints_proto_rawDesc
)

func file_v3_datapoints_proto_rawDescGZIP() []byte {
	file_v3_datapoints_proto_rawDescOnce.Do(func() {
		file_v3_datapoints_proto_rawDescData = protoimpl.X.CompressGZIP(file_v3_datapoints_proto_rawDescData)
	})
	return file_v3_datapoints_proto_rawDescData
}

var file_v3_datapoints_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_v3_datapoints_proto_goTypes = []interface{}{
	(*StreamAggregatesRequest)(nil),  // 0: v3.StreamAggregatesRequest
	(*StreamAggregatesResponse)(nil), // 1: v3.StreamAggregatesResponse
	(*StreamDatapointsRequest)(nil),  // 2: v3.StreamDatapointsRequest
	(*StreamDatapointsResponse)(nil), // 3: v3.StreamDatapointsResponse
	(*DatapointsQuery)(nil),          // 4: v3.DatapointsQuery
	(*ConvertArgs)(nil),              // 5: v3.ConvertArgs
	(*Aggregate)(nil),                // 6: v3.Aggregate
	(*Datapoint)(nil),                // 7: v3.Datapoint
}
var file_v3_datapoints_proto_depIdxs = []int32{
	4, // 0: v3.StreamAggregatesRequest.query:type_name -> v3.DatapointsQuery
	5, // 1: v3.StreamAggregatesRequest.convert:type_name -> v3.ConvertArgs
	6, // 2: v3.StreamAggregatesResponse.aggregates:type_name -> v3.Aggregate
	4, // 3: v3.StreamDatapointsRequest.query:type_name -> v3.DatapointsQuery
	5, // 4: v3.StreamDatapointsRequest.convert:type_name -> v3.ConvertArgs
	7, // 5: v3.StreamDatapointsResponse.datapoints:type_name -> v3.Datapoint
	0, // 6: v3.DatapointsService.StreamAggregates:input_type -> v3.StreamAggregatesRequest
	2, // 7: v3.DatapointsService.StreamDatapoints:input_type -> v3.StreamDatapointsRequest
	1, // 8: v3.DatapointsService.StreamAggregates:output_type -> v3.StreamAggregatesResponse
	3, // 9: v3.DatapointsService.StreamDatapoints:output_type -> v3.StreamDatapointsResponse
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_v3_datapoints_proto_init() }
func file_v3_datapoints_proto_init() {
	if File_v3_datapoints_proto != nil {
		return
	}
	file_v3_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_v3_datapoints_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamAggregatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v3_datapoints_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamAggregatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v3_datapoints_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamDatapointsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v3_datapoints_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamDatapointsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v3_datapoints_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v3_datapoints_proto_goTypes,
		DependencyIndexes: file_v3_datapoints_proto_depIdxs,
		MessageInfos:      file_v3_datapoints_proto_msgTypes,
	}.Build()
	File_v3_datapoints_proto = out.File
	file_v3_datapoints_proto_rawDesc = nil
	file_v3_datapoints_proto_goTypes = nil
	file_v3_datapoints_proto_depIdxs = nil
}
